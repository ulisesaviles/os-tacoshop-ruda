{"version":3,"sources":["config/ordersStateHandler.js","config/metadataHandler.js","objects/taquero.js","config/logsHandler.js","config/allocationAndBalancing.js","App.js","index.js"],"names":["Handler","setOrdersFunction","taqueroType","getOrders","orders","localStorage","getItem","JSON","parse","getAllOrders","setOrders","generalOrders","setItem","stringify","setMetadataFunction","taqueroName","timeout","ms","Promise","resolve","setTimeout","consumeFillings","fillingNames","a","metadata","getMetadata","i","length","fillingName","fillings","setMetadata","attribute","value","generalMetadata","useTortilla","tortillas","madeTaco","queueLength","workingOn","rest","untilNeeded","fan","Taquero","name","canWorkOn","ordersSetter","logsHandler","ordersHandler","OrdersHandler","metadataHandler","MetadataHandler","queue","log","message","putFillings","order","startWorking","workOnNextOrder","shift","insertToQueue","newElements","getQueueSize","setLogsFunction","title","logs","unshift","time","Date","now","taqueros","quesadilleros","taqueroTypes","cuantity","res","push","start","insertTaquero","ordersCuantity","indexOf","App","useState","isRunning","setIsRunning","firstLoad","setFirstLoad","chrono","setChrono","setLogs","LogsHandler","defaultOrders","types","getDefaultOrdersFor","defaultMetadata","active","timeRested","quesadillasSpaceOccupied","salsa","guacamole","cilantro","cebolla","getDefaultMetadataFor","map","type","allocationHandler","AllocationHandler","formatTimeForLogs","timestamp","date","getHours","getMinutes","getSeconds","getMilliseconds","ordersAreFinished","startRUDA","counter","toFixed","useEffect","className","src","alt","onClick","index","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.bf8442e4.chunk.js","sourcesContent":["const Handler = (setOrdersFunction, taqueroType) => {\r\n  const getOrders = () => {\r\n    const orders = localStorage.getItem(\"orders\");\r\n    return JSON.parse(orders);\r\n  };\r\n\r\n  const setOrders = (orders) => {\r\n    let generalOrders = getOrders();\r\n    generalOrders[taqueroType] = orders;\r\n    setOrdersFunction(generalOrders);\r\n    localStorage.setItem(\"orders\", JSON.stringify(generalOrders));\r\n  };\r\n\r\n  return { getAllOrders: getOrders, setOrders };\r\n};\r\n\r\nexport default Handler;\r\n","const Handler = (setMetadataFunction, taqueroName) => {\r\n  const timeout = (ms) => new Promise((resolve) => setTimeout(resolve, ms));\r\n\r\n  const consumeFillings = async (fillingNames) => {\r\n    let metadata = getMetadata();\r\n    for (let i = 0; i < fillingNames.length; i++) {\r\n      const fillingName = fillingNames[i];\r\n      metadata[taqueroName].fillings[fillingName]--;\r\n      await timeout(500);\r\n      setMetadata(\"fillings\", metadata[taqueroName].fillings);\r\n    }\r\n  };\r\n\r\n  const getMetadata = () => {\r\n    const metadata = localStorage.getItem(\"metadata\");\r\n    return JSON.parse(metadata);\r\n  };\r\n\r\n  const madeTaco = () => {\r\n    let metadata = getMetadata();\r\n    // One less in queue\r\n    metadata[taqueroName].queueLength--;\r\n    // Not working on any\r\n    metadata[taqueroName].workingOn = null;\r\n    // One taco less in rest\r\n    metadata[taqueroName].rest.untilNeeded--;\r\n    // One taco less in fan\r\n    metadata[taqueroName].fan.untilNeeded--;\r\n    // Set it\r\n    setMetadataFunction(metadata);\r\n    localStorage.setItem(\"metadata\", JSON.stringify(metadata));\r\n  };\r\n\r\n  const setMetadata = (attribute, value) => {\r\n    let generalMetadata = getMetadata();\r\n    generalMetadata[taqueroName][attribute] = value;\r\n    setMetadataFunction(generalMetadata);\r\n    localStorage.setItem(\"metadata\", JSON.stringify(generalMetadata));\r\n  };\r\n\r\n  const useTortilla = () => {\r\n    let metadata = getMetadata();\r\n    metadata[taqueroName].tortillas--;\r\n    setMetadata(\"tortillas\", metadata[taqueroName].tortillas);\r\n  };\r\n\r\n  return { getMetadata, setMetadata, consumeFillings, useTortilla, madeTaco };\r\n};\r\n\r\nexport default Handler;\r\n","// Handlers\r\nimport OrdersHandler from \"../config/ordersStateHandler\";\r\nimport MetadataHandler from \"../config/metadataHandler\";\r\n\r\n// Actual object\r\nconst Taquero = (\r\n  name,\r\n  canWorkOn,\r\n  ordersSetter,\r\n  setMetadataFunction,\r\n  logsHandler\r\n) => {\r\n  // Handlers and helpers inicialization\r\n  const timeout = (ms) => new Promise((resolve) => setTimeout(resolve, ms));\r\n  const ordersHandler = OrdersHandler(ordersSetter, name);\r\n  const metadataHandler = MetadataHandler(setMetadataFunction, name);\r\n\r\n  // Attributes\r\n  let queue = [];\r\n\r\n  // Functions\r\n  const getOrders = () => {\r\n    return ordersHandler.getAllOrders()[name];\r\n  };\r\n\r\n  const insertToQueue = (newElements) => {\r\n    queue = [...getOrders(), ...newElements];\r\n    ordersHandler.setOrders(queue);\r\n    log(`Inserted ${newElements.length} element(s) succesfully`);\r\n    metadataHandler.setMetadata(\"queueLength\", queue.length);\r\n    return queue;\r\n  };\r\n\r\n  const log = (message) => {\r\n    logsHandler.log(`Taquero de ${name}:`, message);\r\n  };\r\n\r\n  const putFillings = async (order) => {\r\n    // MAKE IT WORKKK\r\n    const fillings = [\"salsa\", \"guacamole\", \"cilantro\", \"cebolla\"];\r\n    await metadataHandler.consumeFillings(fillings);\r\n  };\r\n\r\n  const startWorking = async () => {\r\n    if (getOrders().length === 0) return;\r\n    while (true) {\r\n      const itemsLeft = await workOnNextOrder();\r\n      if (itemsLeft === 0) break;\r\n    }\r\n  };\r\n\r\n  const workOnNextOrder = async () => {\r\n    // Get orders\r\n    queue = getOrders();\r\n    // MAke the first one\r\n    const order = queue.shift();\r\n    metadataHandler.setMetadata(\"workingOn\", order);\r\n    // Taco time\r\n    metadataHandler.useTortilla();\r\n    await timeout(1000);\r\n    // Put fllings\r\n    await putFillings(order);\r\n    // Set it\r\n    ordersHandler.setOrders(queue);\r\n    metadataHandler.madeTaco();\r\n    // Log it\r\n    log(`Finished an order, ${queue.length} left`);\r\n    // Return it\r\n    return queue.length;\r\n  };\r\n\r\n  // Actual object\r\n  return {\r\n    name,\r\n    insertToQueue,\r\n    getQueueSize: () => getOrders().length,\r\n    workOnNextOrder,\r\n    getOrders,\r\n    startWorking,\r\n  };\r\n};\r\n\r\nexport default Taquero;\r\n","const Handler = (setLogsFunction) => {\r\n  const log = (title, message) => {\r\n    let logs = JSON.parse(localStorage.getItem(\"logs\"));\r\n    logs.unshift({ title, message, time: Date.now() });\r\n    setLogsFunction(logs);\r\n    localStorage.setItem(\"logs\", JSON.stringify(logs));\r\n  };\r\n\r\n  return { log };\r\n};\r\n\r\nexport default Handler;\r\n","const Handler = (taqueros, quesadilleros, taqueroTypes) => {\r\n  const getOrders = (cuantity) => {\r\n    let res = [];\r\n    for (let i = 0; i < cuantity; i++) {\r\n      res.push(`Order ${i}`);\r\n    }\r\n    return res;\r\n  };\r\n\r\n  const insertTaquero = (taqueroType, ordersCuantity) => {\r\n    taqueros[taqueroTypes.indexOf(taqueroType)].insertToQueue(\r\n      getOrders(ordersCuantity)\r\n    );\r\n  };\r\n\r\n  const start = () => {\r\n    // Insert 10 orders and start working\r\n    for (let i = 0; i < taqueros.length; i++) {\r\n      taqueros[i].insertToQueue(getOrders(5));\r\n    }\r\n  };\r\n  return { start, insertTaquero };\r\n};\r\nexport default Handler;\r\n","// React imports\nimport React, { useState, useEffect } from \"react\";\n\n// Styles\nimport \"./App.css\";\n\n// Objects\nimport Taquero from \"./objects/taquero\";\nimport LogsHandler from \"./config/logsHandler\";\nimport AllocationHandler from \"./config/allocationAndBalancing\";\n\n// Icons\nimport { IoMan } from \"react-icons/io5\";\n\nconst App = () => {\n  // Config constants\n  const [isRunning, setIsRunning] = useState(false);\n  const [firstLoad, setFirstLoad] = useState(true);\n  // Frontend-exclusive\n  const [chrono, setChrono] = useState(0);\n  const [logs, setLogs] = useState([]);\n  const logsHandler = LogsHandler(setLogs);\n  // Taqueros/orders-related\n  const taqueroTypes = [\n    { name: \"tripa y cabeza\", canWorkOn: [\"tripa\", \"cabeza\"] },\n    { name: \"asada y suadero (1)\", canWorkOn: [\"asada\", \"suadero\"] },\n    { name: \"asada y suadero (2)\", canWorkOn: [\"asada\", \"suadero\"] },\n    { name: \"adobada\", canWorkOn: [\"adobada\"] },\n  ];\n  const getDefaultOrdersFor = (types) => {\n    let orders = {};\n    for (let i = 0; i < types.length; i++) {\n      const type = types[i];\n      orders[type.name] = [];\n    }\n    return orders;\n  };\n  const defaultOrders = getDefaultOrdersFor(taqueroTypes);\n  const [orders, setOrders] = useState(defaultOrders);\n  const defaultMetadata = {\n    workingOn: null,\n    queueLength: 0,\n    fan: {\n      active: false,\n      untilNeeded: 600,\n    },\n    rest: {\n      untilNeeded: 1000,\n      timeRested: 0,\n    },\n    tortillas: 50,\n    quesadillasSpaceOccupied: 0,\n    fillings: {\n      salsa: 150,\n      guacamole: 100,\n      cilantro: 200,\n      cebolla: 200,\n    },\n  };\n  const getDefaultMetadataFor = (types) => {\n    let metadata = {};\n    for (let i = 0; i < types.length; i++) {\n      const type = types[i];\n      metadata[type.name] = defaultMetadata;\n    }\n    return metadata;\n  };\n  const [metadata, setMetadata] = useState(getDefaultMetadataFor(taqueroTypes));\n  const taqueros = taqueroTypes.map((type) =>\n    Taquero(type.name, type.canWorkOn, setOrders, setMetadata, logsHandler)\n  );\n  const allocationHandler = AllocationHandler(taqueros, null, taqueroTypes);\n\n  // Functions\n  const cleanLogs = () => {\n    localStorage.setItem(\"logs\", JSON.stringify([]));\n    setLogs([]);\n  };\n\n  const formatTimeForLogs = (timestamp) => {\n    const date = new Date(timestamp);\n    return `${date.getHours()}:${date.getMinutes()}:${date.getSeconds()} (${date.getMilliseconds()}ms)`;\n  };\n\n  const ordersAreFinished = () => {\n    for (let i = 0; i < taqueros.length; i++) {\n      if (taqueros[i].getQueueSize() > 0) return false;\n    }\n    return true;\n  };\n\n  const setup = () => {\n    // Set initial local storage values\n    localStorage.setItem(\"orders\", JSON.stringify(defaultOrders));\n    localStorage.setItem(\"logs\", JSON.stringify([]));\n    localStorage.setItem(\n      \"metadata\",\n      JSON.stringify(getDefaultMetadataFor(taqueroTypes))\n    );\n  };\n\n  const startRUDA = async () => {\n    if (isRunning) return;\n    setIsRunning(true);\n    cleanLogs();\n\n    // Start Allocation and balance handler\n    allocationHandler.start();\n\n    // Start every taquero\n    for (let i = 0; i < taqueros.length; i++) {\n      taqueros[i].startWorking();\n    }\n\n    // Start loop until everything is done\n    let counter = 0;\n    while (true) {\n      await timeout(100);\n      counter += 0.1;\n      setChrono(counter.toFixed(1));\n      if (ordersAreFinished()) break;\n    }\n    setIsRunning(false);\n  };\n\n  const timeout = (ms) => {\n    return new Promise((resolve) => setTimeout(resolve, ms));\n  };\n\n  // Logic\n  // eslint-disable-next-line\n  useEffect(() => {\n    if (firstLoad) {\n      setFirstLoad(false);\n      setup();\n    }\n  });\n\n  // Render\n  return (\n    <div className=\"App\">\n      <div className=\"header\">\n        <img\n          src=\"https://raw.githubusercontent.com/ulisesaviles/os-tacoshop-ruda/main/RUDA.png\"\n          className=\"logo\"\n          alt=\"logo\"\n        />\n        {!isRunning ? (\n          <button onClick={startRUDA} className=\"startBtn\">\n            Start RUDA\n          </button>\n        ) : (\n          <div className=\"running\">Running RUDA...</div>\n        )}\n        <p className=\"chrono\">({chrono}s)</p>\n      </div>\n      <div className=\"contentContainer\">\n        <div className=\"contentLeftContainer\">\n          {/* <h1 className=\"taquerosTitle\">Taqueros</h1> */}\n          <div className=\"taquerosContainer\">\n            {taqueroTypes.map((taqueroType) => {\n              const index = taqueroTypes.indexOf(taqueroType);\n              return (\n                <div key={index} className=\"taqueroContainer\">\n                  <h4 className=\"taqueroName\">Taquero de {taqueroType.name}</h4>\n                  {/* <IoMan className=\"stickMan\" /> */}\n                  <div className=\"taqueroMetadataContainer\">\n                    <h3 className=\"metadata\">Metadata</h3>\n                    <div className=\"taqueroMetadataRowContainer\">\n                      <h6 className=\"taqueroMetadataRowTitle\">\n                        Orders in queue:\n                      </h6>\n                      <p className=\"actualMetadata\">\n                        {metadata[taqueroType.name].queueLength}\n                      </p>\n                    </div>\n                    <div className=\"taqueroMetadataRowContainer\">\n                      <h6 className=\"taqueroMetadataRowTitle\">Working on:</h6>\n                      <p className=\"actualMetadata\">\n                        {metadata[taqueroType.name].workingOn === null\n                          ? \"null\"\n                          : metadata[taqueroType.name].workingOn}\n                      </p>\n                    </div>\n                    <div className=\"taqueroMetadataRowContainer\">\n                      <h6 className=\"taqueroMetadataRowTitle\">Fan active:</h6>\n                      <p className=\"actualMetadata\">\n                        {JSON.stringify(metadata[taqueroType.name].fan.active)}\n                      </p>\n                    </div>\n                    <div className=\"taqueroMetadataRowContainer\">\n                      <h6 className=\"taqueroMetadataRowTitle\">\n                        Tacos untill turn on the fan:\n                      </h6>\n                      <p className=\"actualMetadata\">\n                        {metadata[taqueroType.name].fan.untilNeeded}\n                      </p>\n                    </div>\n                    <div className=\"taqueroMetadataRowContainer\">\n                      <h6 className=\"taqueroMetadataRowTitle\">Chalán:</h6>\n                      <p className=\"actualMetadata\">X</p>\n                    </div>\n                    <div className=\"taqueroMetadataRowContainer\">\n                      <h6 className=\"taqueroMetadataRowTitle\">Time rested:</h6>\n                      <p className=\"actualMetadata\">\n                        {metadata[taqueroType.name].rest.timeRested}\n                      </p>\n                    </div>\n                    <div className=\"taqueroMetadataRowContainer\">\n                      <h6 className=\"taqueroMetadataRowTitle\">\n                        Tacos untill next full rest:\n                      </h6>\n                      <p className=\"actualMetadata\">\n                        {metadata[taqueroType.name].rest.untilNeeded}\n                      </p>\n                    </div>\n                    <div className=\"taqueroMetadataRowContainer\">\n                      <h6 className=\"taqueroMetadataRowTitle\">Tortillas</h6>\n                      <p className=\"actualMetadata\">\n                        {metadata[taqueroType.name].tortillas}\n                      </p>\n                    </div>\n                    <div className=\"taqueroMetadataRowContainer\">\n                      <h6 className=\"taqueroMetadataRowTitle\">\n                        Quesadillas space occupied:\n                      </h6>\n                      <p className=\"actualMetadata\">\n                        {metadata[taqueroType.name].quesadillasSpaceOccupied}\n                      </p>\n                    </div>\n                    <div className=\"taqueroMetadataRowContainer\">\n                      <h6 className=\"taqueroMetadataRowTitle\">Cilantro:</h6>\n                      <p className=\"actualMetadata\">\n                        {metadata[taqueroType.name].fillings.cilantro}\n                      </p>\n                    </div>\n                    <div className=\"taqueroMetadataRowContainer\">\n                      <h6 className=\"taqueroMetadataRowTitle\">Cebolla:</h6>\n                      <p className=\"actualMetadata\">\n                        {metadata[taqueroType.name].fillings.cebolla}\n                      </p>\n                    </div>\n                    <div className=\"taqueroMetadataRowContainer\">\n                      <h6 className=\"taqueroMetadataRowTitle\">Salsa:</h6>\n                      <p className=\"actualMetadata\">\n                        {metadata[taqueroType.name].fillings.salsa}\n                      </p>\n                    </div>\n                    <div className=\"taqueroMetadataRowContainer\">\n                      <h6 className=\"taqueroMetadataRowTitle\">Guacamole:</h6>\n                      <p className=\"actualMetadata\">\n                        {metadata[taqueroType.name].fillings.guacamole}\n                      </p>\n                    </div>\n                  </div>\n                </div>\n              );\n            })}\n          </div>\n        </div>\n        <div className=\"logsContainer\">\n          <h2 className=\"logsTitle\">Logs:</h2>\n          <p className=\"logsSubtitle\">(De más nuevo a más viejo)</p>\n          <div className=\"logsContentContainer\">\n            {logs.map((log) => (\n              <div className=\"logContainer\">\n                <div className=\"logHeaderContainer\">\n                  <h5 className=\"logTitle\">{log.title}</h5>\n                  <p className=\"logTime\">{formatTimeForLogs(log.time)}</p>\n                </div>\n                {log.message}\n              </div>\n            ))}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n\n// TO-DO'S\n// THU\n//   Quesadillero\n//   Adapt sistem to actual orders\n//   Create Asignación y balanceo\n// FRI\n//   Scheduler\n// SAT\n//   Chalanes\n// SUN\n//   Doc and extras\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}