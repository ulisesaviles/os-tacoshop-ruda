{"version":3,"sources":["config/ordersStateHandler.js","objects/taquero.js","App.js","index.js"],"names":["Handler","setOrdersFunction","taqueroType","getOrders","orders","localStorage","getItem","JSON","parse","getAllOrders","setOrders","generalOrders","setItem","stringify","Taquero","type","ordersSetter","timeout","ms","Promise","resolve","setTimeout","handler","queue","startWorking","a","length","workOnNextOrder","shift","insertToQueue","newElements","getQueueSize","App","taqueroTypes","useState","updater","setUpdater","defaultOrders","types","i","getDefaultOrdersFor","taqueros","map","start","setStart","firstLoad","setFirstLoad","ordersAreFinished","startRUDA","counter","toFixed","useEffect","className","onClick","index","indexOf","cuantity","res","push","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.93b82333.chunk.js","sourcesContent":["const Handler = (setOrdersFunction, taqueroType) => {\r\n  const getOrders = () => {\r\n    const orders = localStorage.getItem(\"orders\");\r\n    return JSON.parse(orders);\r\n  };\r\n\r\n  const setOrders = (orders) => {\r\n    let generalOrders = getOrders();\r\n    setOrdersFunction(generalOrders);\r\n    generalOrders[taqueroType] = orders;\r\n    setOrdersFunction(generalOrders);\r\n    localStorage.setItem(\"orders\", JSON.stringify(generalOrders));\r\n  };\r\n\r\n  return { getAllOrders: getOrders, setOrders };\r\n};\r\n\r\nexport default Handler;\r\n","import Handler from \"../config/ordersStateHandler\";\r\n\r\nconst Taquero = (type, ordersSetter) => {\r\n  // Handlers and helpers\r\n  const timeout = (ms) => new Promise((resolve) => setTimeout(resolve, ms));\r\n  const handler = Handler(ordersSetter, type);\r\n\r\n  // Attributes\r\n  let queue = [];\r\n\r\n  // Functions\r\n  const getOrders = () => {\r\n    return handler.getAllOrders()[type];\r\n  };\r\n\r\n  const insertToQueue = (newElements) => {\r\n    queue = [...getOrders(), ...newElements];\r\n    handler.setOrders(queue);\r\n    // console.log(`Successfully setted orders to ${JSON.stringify(getOrders())}`);\r\n    return queue;\r\n  };\r\n\r\n  const startWorking = async () => {\r\n    if (getOrders().length === 0) return;\r\n    while (true) {\r\n      const itemsLeft = await workOnNextOrder();\r\n      if (itemsLeft === 0) break;\r\n    }\r\n  };\r\n\r\n  const workOnNextOrder = async () => {\r\n    await timeout(1000);\r\n    queue = getOrders();\r\n    // console.log(queue);\r\n    // console.log(`Taquero de ${type} finalizó una orden`);\r\n    queue.shift();\r\n    handler.setOrders(queue);\r\n    return queue.length;\r\n  };\r\n\r\n  // Actual object\r\n  return {\r\n    type,\r\n    insertToQueue,\r\n    getQueueSize: () => getOrders().length,\r\n    workOnNextOrder,\r\n    getOrders,\r\n    startWorking,\r\n  };\r\n};\r\n\r\nexport default Taquero;\r\n","// React imports\nimport React, { useState, useEffect } from \"react\";\n\n// Styles\nimport \"./App.css\";\n\n// Objects\nimport Taquero from \"./objects/taquero\";\n\nconst App = () => {\n  // Constants\n  const taqueroTypes = [\"asada\", \"adobada\", \"suadero\"];\n  const [updater, setUpdater] = useState(0);\n  const getDefaultOrdersFor = (types) => {\n    let orders = {};\n    for (let i = 0; i < types.length; i++) {\n      const type = types[i];\n      orders[type] = [];\n    }\n    return orders;\n  };\n  const defaultOrders = getDefaultOrdersFor(taqueroTypes);\n  const [orders, setOrders] = useState(defaultOrders);\n  const taqueros = taqueroTypes.map((type) => Taquero(type, setOrders));\n  const [start, setStart] = useState(false);\n  const [firstLoad, setFirstLoad] = useState(true);\n\n  // Functions\n  const getOrders = (cuantity) => {\n    let res = [];\n    for (let i = 0; i < cuantity; i++) {\n      res.push(`Order ${i}`);\n    }\n    return res;\n  };\n\n  const ordersAreFinished = () => {\n    for (let i = 0; i < taqueros.length; i++) {\n      if (taqueros[i].getQueueSize() > 0) return false;\n    }\n    return true;\n  };\n\n  const startRUDA = async () => {\n    // If it has already started, return\n    if (start) return;\n    setStart(true);\n\n    // Insert 10 orders and start working\n    for (let i = 0; i < taqueros.length; i++) {\n      // taqueros[i].insertToQueue(getOrders(10));\n      taqueros[i].startWorking();\n    }\n\n    // Keep the dom updating every second\n    let counter = 0;\n    while (true) {\n      await timeout(100);\n      counter += 0.1;\n      setUpdater(counter.toFixed(1));\n      if (ordersAreFinished()) break;\n    }\n    setStart(false);\n  };\n\n  const timeout = (ms) => {\n    return new Promise((resolve) => setTimeout(resolve, ms));\n  };\n\n  // Logic\n  useEffect(() => {\n    if (firstLoad) {\n      setFirstLoad(false);\n      localStorage.setItem(\"orders\", JSON.stringify(defaultOrders));\n    }\n  }, [firstLoad, defaultOrders]);\n\n  // Render\n  return (\n    <div className=\"App\">\n      {updater}\n      <button onClick={startRUDA}>Start</button>\n      <div className=\"logsContainer\">\n        {/* {JSON.stringify(orders)} */}\n        {taqueroTypes.map((taqueroType) => {\n          const index = taqueroTypes.indexOf(taqueroType);\n          return (\n            <div key={index}>\n              {taqueroType}{\" \"}\n              <button\n                onClick={() =>\n                  taqueros[index].insertToQueue([...getOrders(10)])\n                }\n              >\n                Insert 10\n              </button>\n              <div>{JSON.stringify(orders[taqueroType])}</div>\n            </div>\n          );\n        })}\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n\n// TO-DO'S\n// WED\n//   With a similar structure with passing setStates functions, create a logger handler\n//   Adapt sistem to actual orders\n//   Create actual frontend\n// THU\n//   Create Asignación y balanceo\n// FRI\n//   Scheduler\n// SAT\n//   Chalanes\n// SUN\n//   Doc and extras\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}